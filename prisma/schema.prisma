generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  username       String          @unique
  password       String
  name           String

  documents      Document[]      @relation("AuthorDocuments")
  accesses       Access[]
  mentions       Mention[]       @relation("MentionedUser")
  sentMentions   Mention[]       @relation("ByUser")
  notifications  Notification[]
  versions       Version[]       @relation("ModifiedVersions")

  createdAt      DateTime        @default(now())
}

model Document {
  id          String      @id @default(cuid())
  title       String
  content     String
  visibility  Visibility   @default(PRIVATE)

  authorId    String
  author      User        @relation("AuthorDocuments", fields: [authorId], references: [id])

  accesses    Access[]
  mentions    Mention[]
  versions    Version[]

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Access {
  id          String     @id @default(cuid())
  userId      String
  documentId  String
  permission  Permission

  user        User       @relation(fields: [userId], references: [id])
  document    Document   @relation(fields: [documentId], references: [id])

  @@unique([userId, documentId]) // satu user hanya punya satu access per dokumen
}

model Mention {
  id           String    @id @default(cuid())
  mentionedId  String
  documentId   String
  userId       String     // yang menyebut

  document     Document   @relation(fields: [documentId], references: [id])
  mentioned    User       @relation("MentionedUser", fields: [mentionedId], references: [id])
  byUser       User       @relation("ByUser", fields: [userId], references: [id])

  createdAt    DateTime   @default(now())
}

model Notification {
  id        String    @id @default(cuid())
  userId    String
  message   String
  isRead    Boolean   @default(false)
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
}

model Version {
  id          String     @id @default(cuid())
  documentId  String
  content     String
  modifiedBy  String
  createdAt   DateTime   @default(now())

  document    Document   @relation(fields: [documentId], references: [id])
  user        User       @relation("ModifiedVersions", fields: [modifiedBy], references: [id])
}

enum Visibility {
  PUBLIC
  PRIVATE
}

enum Permission {
  READ
  EDIT
}
